# --- CATPPUCCIN  ---
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'catppuccin/tmux'

# Configure Catppuccin
set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# Configure Online
set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold]  #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}]  #S }}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}]  #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] 󰖩 on ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 off }"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_blue}] 󰭦 %Y-%m-%d 󰅐 %H:%M "

# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"


# Configure Tmux
set -g status-position top
set -g status-style "bg=#{@thm_bg}"
set -g status-justify "absolute-centre"
set -g base-index 1
setw -g mouse on 

# pane border look and feel
setw -g pane-border-status top
setw -g pane-border-format ""
setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
setw -g pane-border-lines single

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "Window"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]│"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"



# --- tmux-navigator  ---
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @vim_navigator_mapping_left "C-Left C-h"  # use C-h and C-Left
set -g @vim_navigator_mapping_right "C-Right C-l"
set -g @vim_navigator_mapping_up "C-k"
set -g @vim_navigator_mapping_down "C-j"
set -g @vim_navigator_mapping_prev ""  # removes the C-\ binding
set -g @vim_navigator_prefix_mapping_clear_screen ""
set -g @vim_navigator_pattern '(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +@vim_navigator_pattern$'"
set -g @vim_navigator_check "${is_vim}" 

# --- Keybindings without prefix ---

# Pane navigation
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Window navigation (Alt+0..9, creates window if it doesn't exist)
bind -n M-0 run "tmux select-window -t :0 || tmux new-window -t :0"
bind -n M-1 run "tmux select-window -t :1 || tmux new-window -t :1"
bind -n M-2 run "tmux select-window -t :2 || tmux new-window -t :2"
bind -n M-3 run "tmux select-window -t :3 || tmux new-window -t :3"
bind -n M-4 run "tmux select-window -t :4 || tmux new-window -t :4"
bind -n M-5 run "tmux select-window -t :5 || tmux new-window -t :5"
bind -n M-6 run "tmux select-window -t :6 || tmux new-window -t :6"
bind -n M-7 run "tmux select-window -t :7 || tmux new-window -t :7"
bind -n M-8 run "tmux select-window -t :8 || tmux new-window -t :8"
bind -n M-9 run "tmux select-window -t :9 || tmux new-window -t :9"

# Window prev/next
bind -n M-H previous-window
bind -n M-L next-window

# Session navigation
bind -n M-J switch-client -p
bind -n M-K switch-client -n

# Kill pane/window
bind -n M-x kill-pane
bind -n M-X kill-window

# Create/Rename
bind -n M-c new-window
bind -n M-, command-prompt -I "#W" "rename-window '%%'"
bind -n M-$ command-prompt -I "#S" "rename-session '%%'"

# Splits
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-h split-window -v -c "#{pane_current_path}"

# Launch floating nnn (requires popup support)
bind -n M-e display-popup -E "nnn"

# Resize panes with arrows
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5
bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5

# Pane mark/join
bind -n M-m select-pane -m
bind -n M-b choose-tree -Z -N -w "join-pane -s '%%'"

# Floating htop
bind -n M-t display-popup -E "htop"

# Prefix combos for session/window pickers and layout
set -g prefix C-space
bind C-space send-prefix  
unbind-key C-b
bind C-r run-shell "tmux run-shell 'tmux switch-client -t \$(tmux list-sessions -F \"#S\" | fzf)'"
bind C-t run-shell "tmux run-shell 'tmux select-window -t \$(tmux list-windows -a -F \"#S:#I #W\" | fzf | cut -d: -f1,2)'"
bind -n M-r source-file ~/.tmux.conf \; display-message "✔ Reloaded tmux.conf"

# Layout
# bind C-r M-4 select-layout main-vertical

# Cycle panes in layout
bind -n M-O select-pane -t :.+
# Zoom/fullscreen
bind -n M-z resize-pane -Z
bind -n M-f resize-pane -Z

# mouse
bind -n MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# copy
setw -g mode-keys vi
# Gunakan v untuk masuk visual mode, y untuk yank
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'Escape' send -X cancel


# Vim session picker menu (fzf inside tmux popup or external script)
bind C-v display-popup -E "tmux list-panes -a -F '#{pane_pid} #{pane_title}' | grep -iE 'nvim|vim' | fzf"

run '~/.tmux/plugins/tpm/tpm'
